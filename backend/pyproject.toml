[tool.poetry]
name = 'app'
version = '0.1.0'
description = ''
authors = ['Arnaldo Turque <arnaldo@turque.com.br>']
readme = '../README.md'
packages = []

[tool.poetry.dependencies]
python = '^3.11'
fastapi = '^0.103.2'
uvicorn = '^0.23.2'
pydantic = {extras = ['email'], version = '^2.4.2'}
sqlalchemy = '^2.0.21'
pydantic-settings = '^2.0.3'
alembic = '^1.12.0'
python-jose = {extras = ['cryptography'], version = '^3.3.0'}
passlib = {extras = ['bcrypt'], version = '^1.7.4'}
python-multipart = '^0.0.6'
fastapi-mail = '^1.4.1'
pytest-mock = '^3.12.0'
sentry-sdk = {extras = ['fastapi'], version = '^1.34.0'}
jinja2 = '^3.1.4'
sib-api-v3-sdk = '^7.6.0'
prometheus-fastapi-instrumentator = "^6.1.0"
psycopg2-binary = "^2.9.9"
fastapi-cli = "^0.0.4"

[tool.poetry.group.dev.dependencies]
pytest = '^7.4.2'
pytest-cov = '^4.1.0'
taskipy = '^1.12.0'
blue = '^0.9.1'
ruff = '^0.0.292'
httpx = '^0.25.0'
isort = '^5.12.0'
factory-boy = '^3.3.0'
freezegun = '^1.2.2'
ipdb = "^0.13.13"

[tool.ruff]
line-length = 79
exclude = ['.venv', 'migrations']

[tool.isort]
profile = 'black'
line_length = 79
extend_skip = ['migrations']

[tool.pytest.ini_options]
pythonpath = './app'

[tool.blue]
extend-exclude = '(migrations/)'

[tool.taskipy.tasks]
lint = 'ruff . && blue --check . --diff'
format = 'blue .  && isort .'
dev = 'fastapi dev'
run = 'fastapi run'
pre_test = 'task lint'
test = 'pytest -s -x --cov=app -vv'
post_test = 'coverage html'
make-migrations = 'alembic revision --autogenerate -m '
migrate = 'alembic upgrade head'
clean = 'find . | grep -E "(/__pycache__$|\.pyc$|\.pyo$)" | xargs rm -rf;'

[build-system]
requires = ['poetry-core']
build-backend = 'poetry.core.masonry.api'
